<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- mybatis的主配置文件 -->
<configuration>
    <!-- 配置properties
        可以在标签内部配置连接数据库的信息
        也可以通过属性引用外部配置文件信息 （resource url）
        resource属性：用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下。
        url属性： 要求按照Url的写法来写地址
    -->
<!--    <properties url="file:///Users/aaab/Documents/codes/java/mytatisTest/src/main/resources/jdbcConfig.properties">-->
    <properties resource="jdbcConfig.properties">
        <!-- <property name="driver" value="com.mysql.jdbc.Driver"></property>
         <property name="url" value="jdbc:mysql://localhost:3306/eesy_mybatis"></property>
         <property name="username" value="root"></property>
         <property name="password" value="1234"></property>-->
    </properties>

    <settings>
        <!--开启Mybatis支持延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"></setting>
        <setting name="cacheEnabled" value="true"/>   <!--开启二级缓存-->
    </settings>

<!--    <properties resource="jdbcConfig.properties"></properties>-->
    <!--使用typeAliases配置别名，它只能配置 domain中类 的别名 -->
    <typeAliases>
        <!--typeAlias用于配置别名。type属性指定的是实体类全限定类名。alias属性指定别名，当指定了别名就再区分大小写
        <typeAlias type="com.itheima.domain.User" alias="user"></typeAlias>-->

        <!-- 用于指定要配置别名的包，当指定之后，该包下的实体类都会注册别名，并且类名就是别名，不再区分大小写-->
<!--        此后，XXXDao.xml中配置的sql的 parameterType 属性就可以直接使用别名就可以，不用再写全限定名-->
        <package name="com.jby.mybatisTest1.domain"></package>
        <package name="com.jby.mybatisTest2.domain"></package>
        <package name="com.jby.mybatisTest3.domain"></package>
        <package name="com.jby.mybatisTest4.domain"></package>
    </typeAliases>

    <!--分页插件-->
    <plugins>
        <!-- com.github.pagehelper为PageHelper类所在包名 -->
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <!-- 该参数默认为false -->
            <!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 -->
            <!-- 和startPage中的pageNum效果一样 -->
            <property name="offsetAsPageNum" value="true" />
            <!-- 该参数默认为false -->
            <!-- 设置为true时，使用RowBounds分页会进行count查询 -->
            <property name="rowBoundsWithCount" value="true" />
            <!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 -->
            <!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型） -->
            <property name="pageSizeZero" value="true" />
            <!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 -->
            <!-- 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 -->
            <!-- 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 -->
            <property name="reasonable" value="false" />
            <!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 -->
            <!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 -->
            <!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,不配置映射的用默认值 -->
            <!-- 不理解该含义的前提下，不要随便复制该配置 -->
            <property name="params" value="pageNum=start;pageSize=limit;" />
            <!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page -->
            <property name="returnPageInfo" value="check" />
        </plugin>
    </plugins>

    <!-- 配置环境 -->
    <environments default="mysql">
        <!-- 配置mysql的环境-->
        <environment id="mysql">
            <!-- 配置事务的类型-->
            <transactionManager type="JDBC"></transactionManager>
            <!-- 配置数据源（连接池） -->
            <dataSource type="POOLED">
                <!-- 配置连接数据库的4个基本信息 -->
<!--                <property name="driver" value="com.mysql.jdbc.Driver"/>-->
<!--                <property name="url" value="jdbc:mysql://localhost:3306/user"/>-->
<!--                <property name="username" value="root"/>-->
<!--                <property name="password" value="1qaz2wsx"/>-->
                <property name="driver" value="${jdbc.driver}"></property>
                <property name="url" value="${jdbc.url}"></property>
                <property name="username" value="${jdbc.username}"></property>
                <property name="password" value="${jdbc.password}"></property>
            </dataSource>
        </environment>
    </environments>

    <!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 -->
    <mappers>
<!--        <mapper resource="com/jby/mybatisTest1/dao/IUserDao2.xml"/>-->
        <!--使用注解 :mapper标签的定义不同，此时不需要IUserDao.xml配置文件，同时在Dao类的方法上使用注解（同样不需要实现类）-->
<!--        <mapper class="com....."></mapper>-->

        <!--<mapper resource="com/jby/dao/IUserDao2.xml"></mapper>-->
        <!-- package标签是用于指定 dao接口所在的包 ,配置该dao接口下所有的dao类 -->
        <package name="com.jby.mybatisTest1.dao"></package>
        <package name="com.jby.mybatisTest2.dao"></package>
        <package name="com.jby.mybatisTest3.dao"></package>
        <package name="com.jby.mybatisTest4.dao"></package>

    </mappers>
</configuration>